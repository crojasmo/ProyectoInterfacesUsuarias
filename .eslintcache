[{"/home/usuario/ProyectoInterfacesUsuarias/src/index.js":"1","/home/usuario/ProyectoInterfacesUsuarias/src/App.js":"2","/home/usuario/ProyectoInterfacesUsuarias/src/reportWebVitals.js":"3","/home/usuario/ProyectoInterfacesUsuarias/src/Components/header.js":"4","/home/usuario/ProyectoInterfacesUsuarias/src/Components/footer.js":"5","/home/usuario/ProyectoInterfacesUsuarias/src/Components/Contacto.js":"6","/home/usuario/ProyectoInterfacesUsuarias/src/Components/Trueque.js":"7"},{"size":655,"mtime":1609366324148,"results":"8","hashOfConfig":"9"},{"size":821,"mtime":1609631144546,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1609364424793,"results":"11","hashOfConfig":"9"},{"size":2901,"mtime":1609621274584,"results":"12","hashOfConfig":"9"},{"size":1245,"mtime":1609365746130,"results":"13","hashOfConfig":"9"},{"size":4136,"mtime":1609714893434,"results":"14","hashOfConfig":"9"},{"size":5186,"mtime":1609712746929,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"xs0641",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"18"},"/home/usuario/ProyectoInterfacesUsuarias/src/index.js",[],["35","36"],"/home/usuario/ProyectoInterfacesUsuarias/src/App.js",["37"],"import './App.css';\nimport Header from \"./Components/header\";\nimport Footer from \"./Components/footer\";\nimport Trueque from \"./Components/Trueque\";\nimport Contacto from \"./Components/Contacto\"\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n<BrowserRouter>\n            <Switch>\n             \n              <Route path=\"/trueque\">\n                <Header/>\n                <Trueque/>\n                </Route>\n\n                <Route path=\"/contacto\">\n                <Header/>\n                <Contacto/>\n                </Route>\n              \n              <Route path=\"/\">\n              <Header/>\n              </Route>\n            </Switch>\n          <Footer/>\n        </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/home/usuario/ProyectoInterfacesUsuarias/src/reportWebVitals.js",[],"/home/usuario/ProyectoInterfacesUsuarias/src/Components/header.js",[],"/home/usuario/ProyectoInterfacesUsuarias/src/Components/footer.js",["38"],"import React from 'react';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Container from \"react-bootstrap/cjs/Container\";\nimport {Link} from \"react-router-dom\";\nclass Footer extends React.Component {\n    render() {\n        return <Container fluid={true} className={\"bg-light\"}>\n            <Row>\n                <Col as={\"p\"} sm={true} className=\"my-1 text-muted text-center text-sm-left align-self-center\">\n                    <Link id=\"contact\" style={{color: \"grey\"}} to=\"/contact\"> Contacto</Link>\n                </Col>\n                <Col as={\"p\"} sm={true} className=\"my-1 text-center text-muted\">Creado con el cora️ por estudiantes para\n                    estudiantes <br/>\n                    <a referrerPolicy=\"origin\" rel=\"noopener\"\n                       href=\"http://github.com/CsarMan/malla-interactiva\"\n                       target=\"_blank\">Código fuente</a>\n                </Col>\n                <Col as={\"p\"} sm={true} className=\"my-1 text-muted text-center text-sm-right align-self-center\">\n                    <Link id=\"goToAportes\" style={{color: \"grey\"}} to=\"/aportes\">Donaciones</Link>\n                </Col>\n            </Row>\n\n        </Container>    }\n}\n\nexport default Footer;","/home/usuario/ProyectoInterfacesUsuarias/src/Components/Contacto.js",["39","40","41","42","43"],"import React from 'react';\nimport './Contacto.css';\nimport Container from \"react-bootstrap/cjs/Container\";\nimport PropTypes from \"prop-types\"\nimport { withRouter } from \"react-router\"\nimport {Col, FormControl, InputGroup, Row,ButtonGroup,Button,Card,Table} from \"react-bootstrap\";\n\nclass Contacto extends React.Component {\n\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        this.careers = {}\n    }\n\n    sendMessagge(){\n      document.getElementById(\"demo\").innerHTML += '<div class=\"kontainer\"> <img src=\"/w3images/bandmember.jpg\" alt=\"Avatar\"/> <p>Hello. How are you today?</p> <span class=\"time-right\">11:00</span> </div>';\n    }\n    \n\n    render() {\n        \n        return <>\n         \n            <Container fluid={true}>\n            <Row>\n            <Col>\n                \n                <br/>\n                <br/>\n                <div class=\"scrollbar\" Id = \"demo\" style = {{ width: \"800px\", maxHeight: \"400px\" }}>\n                <div class=\"kontainer\">\n                <img src=\"/w3images/bandmember.jpg\" alt=\"Avatar\"/>\n                <p>Hello. How are you today?</p>\n                <span class=\"time-right\">11:00</span>\n                </div>\n\n                <div class=\"kontainer darker\">\n                <img src=\"/w3images/avatar_g2.jpg\" alt=\"Avatar\" class=\"right\"/>\n                <p>Hey! I'm fine. Thanks for asking!</p>\n                <span class=\"time-left\">11:01</span>\n                </div>\n\n                <div class=\"kontainer\">\n                  <img src=\"/w3images/bandmember.jpg\" alt=\"Avatar\"/>\n                    <p>Sweet! So, what do you wanna do today?</p>\n                  <span class=\"time-right\">11:02</span>\n                </div>\n\n                <div class=\"kontainer darker\">\n                 <img src=\"/w3images/avatar_g2.jpg\" alt=\"Avatar\" class=\"right\"/>\n                  <p>Nah, I dunno. Play soccer.. or learn more coding perhaps?</p>\n                  <span class=\"time-left\">11:05</span>\n                </div> \n                <div class=\"kontainer\">\n                  <img src=\"/w3images/bandmember.jpg\" alt=\"Avatar\"/>\n                    <p>Sweet! So, what do you wanna do today?</p>\n                  <span class=\"time-right\">11:02</span>\n                </div>\n\n                <div class=\"kontainer darker\">\n                 <img src=\"/w3images/avatar_g2.jpg\" alt=\"Avatar\" class=\"right\"/>\n                  <p>Nah, I dunno. Play soccer.. or learn more coding perhaps?</p>\n                  <span class=\"time-left\">11:05</span>\n                </div> \n                </div>\n                <br/>\n                <InputGroup className=\"mb-3\">\n                <InputGroup.Prepend>\n                <Button variant=\"success\">Button</Button>\n                </InputGroup.Prepend>\n                <FormControl  placeholder=\"Maximo 100 caracteres\" maxLength ={100} aria-label=\"Recipient's username\" aria-describedby=\"basic-addon1\" />\n                <InputGroup.Append>\n                <Button variant=\"outline-primary\" onClick = {this.sendMessagge()}>Send</Button>\n                </InputGroup.Append>\n                \n                </InputGroup>\n                <br/>\n                \n        \n            </Col>\n\n            <Col>\n            \n            <h2>Vendedor</h2>\n            \n            <div class=\"col d-flex justify-content-center\">\n            <div class=\"card\" style={{width: '18rem'}}>\n                <img class=\"card-img-top\" src=\"...\" alt=\"Card image cap\"/>\n                <div class=\"card-body\">\n                    <h5 class=\"card-title\">Juan Rojas</h5>\n                    <p class=\"card-text\">Telefono: +569664020xx</p>\n                    <p class=\"card-text\">Ubicacion:Region Metropolitana,Santiago</p>\n                    <a href=\"#\" class=\"btn btn-primary\">Perfil</a>\n                </div>\n            </div>\n            </div>\n        \n            </Col>\n            </Row>\n\n        \n        \n        </Container>  \n        </>\n\n    }\n}\n\nexport default withRouter(Contacto);","/home/usuario/ProyectoInterfacesUsuarias/src/Components/Trueque.js",["44","45"],"import React from 'react';\nimport Container from \"react-bootstrap/cjs/Container\";\nimport PropTypes from \"prop-types\"\nimport { withRouter } from \"react-router\"\nimport {Col, FormControl, InputGroup, Row,ButtonGroup,Button,Card,Table,Figure} from \"react-bootstrap\";\nimport imagen from \"./img/auto.jpg\"\nimport { X } from 'react-bootstrap-icons';\nimport { ArrowLeftRight } from 'react-bootstrap-icons';\n\nclass Trueque extends React.Component {\n\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            tusproductos:[{\"nombre\":\"autito\",\"precio\":2200},{\"nombre\":\"estufa\",\"precio\":21300}],\n            productosTrueque:[],\n            ValorTrueque:-0\n        }\n        /*this.CreateProducto(\"autito\",2200)\n        this.CreateProducto(\"estufa\",21300)\n        this.CreateProducto(\"telefono\",99000)\n        this.CreateProducto(\"notebook\",500000)\n        this.CreateProducto(\"auto\",1290000)*/\n        \n    }\n    \n    CreateProducto(nombre,precio){\n        var producto=[...this.state.tusproductos]\n        var prod={\"nombre\":nombre,\"precio\":precio}\n        producto.push(prod)\n        this.setState({tusproductos:producto})\n    }\n\n    Ofrecer(producto){\n        var listaProducto=[...this.state.tusproductos]\n        var ofrecidos=[...this.state.productosTrueque]\n        var valor=this.state.ValorTrueque\n        const index = listaProducto.indexOf(producto);\n        if (index > -1) {\n            listaProducto.splice(index, 1);\n        }\n        ofrecidos.push(producto)\n        valor=valor+producto.precio\n        this.setState({tusproductos:listaProducto,productosTrueque:ofrecidos,ValorTrueque:valor})\n\n\n    }\n\n    Eliminar(producto){\n        var listaProducto=[...this.state.tusproductos]\n        var ofrecidos=[...this.state.productosTrueque]\n        var valor=this.state.ValorTrueque\n        const index = ofrecidos.indexOf(producto);\n        if (index > -1) {\n            ofrecidos.splice(index, 1);\n        }\n        listaProducto.push(producto)\n        valor=valor-producto.precio\n        this.setState({tusproductos:listaProducto,productosTrueque:ofrecidos,ValorTrueque:valor})\n\n    }\n\n    \n    \n\n    render() {\n        \n        return <>\n            \n            <Container fluid>\n            <Row >\n            <Col xs={2} classname=\"align-self-start\">\n                <h1>\n                    Sus Productos\n                </h1>\n                \n                \n                <br/>\n                <br/>\n                \n                <Card body>\n                <ButtonGroup vertical>\n                {this.state.tusproductos.map(producto =>\n                     <Button variant=\"outline-secondary\" type=\"button\" onClick={this.Ofrecer.bind(this,producto)} > <Figure>\n                     <Figure.Image\n                       width={50}\n                       height={50}\n                \n                       src={imagen}\n                     />\n                   </Figure> {producto.nombre}  $ {producto.precio}</Button>\n                    \n\n                )}\n                </ButtonGroup>\n                </Card>\n                \n                <br/>\n               \n                <br/>\n                \n        \n            </Col>\n\n        <Col xs={3} classname=\"align-self-end\">\n        <h1>\n                    Productos para trueque\n                </h1>\n                \n               \n                <br/>\n                <br/>\n                {this.state.productosTrueque.map(producto =>\n\n                <Card>\n                <Table>\n        \n                <th>\n                    <Card  style={{ width: '12rem',height: \"12rem\" }}>\n                    <Card.Img variant=\"top\" src={imagen}/>\n                    \n                      <Card.Title>{producto.nombre}</Card.Title>\n                      <Card.Text>\n                        $ {producto.precio}\n                        \n                      </Card.Text>\n                     \n                     </Card>\n                     </th>\n                     <th>\n                     <X classname=\"clickeable-x\" color=\"red\" onClick={this.Eliminar.bind(this,producto) } size={40}/>\n                     </th>\n                     </Table>\n                     </Card>\n                )}\n               \n                <br/>\n               \n                <br/>\n                <Card body>$        {this.state.ValorTrueque}</Card>\n        \n        </Col>\n        <Col xs={2}>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <ArrowLeftRight size={96}/>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <Button variant=\"success\" size=\"lg\"> Ofrecer Trueque</Button>  \n        </Col>\n        <Col xs={4}>\n        \n        \n        </Col>\n        </Row>\n        </Container>  \n        </>\n\n    }\n}\n\nexport default withRouter(Trueque);\n\n\n",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":10,"column":3,"nodeType":"52","messageId":"53","endLine":10,"endColumn":11},{"ruleId":"54","severity":1,"message":"55","line":15,"column":21,"nodeType":"56","endLine":17,"endColumn":40},{"ruleId":"50","severity":1,"message":"57","line":6,"column":43,"nodeType":"52","messageId":"53","endLine":6,"endColumn":54},{"ruleId":"50","severity":1,"message":"58","line":6,"column":62,"nodeType":"52","messageId":"53","endLine":6,"endColumn":66},{"ruleId":"50","severity":1,"message":"59","line":6,"column":67,"nodeType":"52","messageId":"53","endLine":6,"endColumn":72},{"ruleId":"60","severity":1,"message":"61","line":94,"column":17,"nodeType":"56","endLine":94,"endColumn":75},{"ruleId":"62","severity":1,"message":"63","line":99,"column":21,"nodeType":"56","endLine":99,"endColumn":57},{"ruleId":"50","severity":1,"message":"64","line":5,"column":14,"nodeType":"52","messageId":"53","endLine":5,"endColumn":25},{"ruleId":"50","severity":1,"message":"65","line":5,"column":27,"nodeType":"52","messageId":"53","endLine":5,"endColumn":37},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'ButtonGroup' is defined but never used.","'Card' is defined but never used.","'Table' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'FormControl' is defined but never used.","'InputGroup' is defined but never used.","no-global-assign","no-unsafe-negation"]